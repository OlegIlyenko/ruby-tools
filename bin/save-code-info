#!/usr/bin/env ruby

require 'json'
require 'open3'
require 'gli'
require 'file_analysis'

include GLI::App

program_desc "Adds code information to the json file"

flag [:c, :col], desc: "Column in the file", type: Integer
flag [:l, :line], desc: "Line in the file", type: Integer
flag [:f, :file], desc: "The path to the source file"
flag [:s, :selected], desc: "Selected text"

pre do |opts| 
  required_opts opts, :col, :line

  @analyzer = case opts[:file]
                when /.*\.java/ then FileAnalysis::JavaAnalyzer.new opts
                when /.*\.sql/ then FileAnalysis::SqlAnalyzer.new opts
                else FileAnalysis::AnyAnalyzer.new opts
              end
end

desc "Copy result in human-readable to the clipboard. No file is written."
command :copy do |c|
  c.action do
    fmt = @analyzer.format
    
    if fmt
      Open3.pipeline_w("pbcopy") {|i|
        i.puts fmt
      }
    
      log "Copied to clipboard!", @analyzer.analyze[1]
    else
      log "NOT Copied!", "Copy not supported!"
    end
  end
end

desc "Save info to the file in JSON format"
command :save do |c|
  c.flag [:d, :dest], desc: "The path to JSON file where results would be saved", default_value: '/Users/admin/found.json' 
  c.action do |gopts, opts|
    res, descr = @analyzer.analyze
    
    open(opts[:dest], "a") do |f|
      f.puts JSON.dump(res)
    end

    puts "Added:", JSON.pretty_generate(res)
    log "Saved!", descr
  end
end

def required_opts(global_options, *opts)
  opts.each do |o|
    help_now!("#{o} is required") unless global_options[o]
  end
end

def log(title, message)
  puts("%20s" % title + ": #{message}")

  if command? "growlnotify"
    `growlnotify -a "Intellij Idea 12" -t "#{title}" -m "#{message}"`
  else
    `notify-send "#{title}" "#{message}"`
  end
end

def command? name
  system "which #{name} > /dev/null 2>&1"
end

exit run(ARGV)

  